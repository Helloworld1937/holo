//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading;

public class VRClient
{
	private TcpClient m_client = null;
	private float[] m_stion = null;

	public VRClient (float[] stion)
	{
		m_client = new TcpClient();
		m_stion = stion;
	}
	
	const Int32 NEED_NEW_DATA = 0x00000001;
	const Int32 EXIT = 0x000000002;

	public void Start() {
		IPEndPoint ip = new IPEndPoint(IPAddress.Parse("127.0.0.1"), 2333);
		m_client.Connect(ip);
		System.Console.WriteLine("Access Successful.");
		NetworkStream clientStream = m_client.GetStream();
		int bytesRead = 0;
		int count = 0;
		byte[] readData = new byte[80 * 4];
		//byte[] toFloat = new byte[4];
		
		while (true) {
			try {
				// need new data
				//Thread.Sleep(1000);
				clientStream.Write(BitConverter.GetBytes(NEED_NEW_DATA), 0, sizeof(Int32));
				
				bytesRead = clientStream.Read(readData, count, readData.Length);
				count += bytesRead;
			}
			catch (Exception e) {
				Console.Out.WriteLine(e.Message);
				break;
			}
			
			if (bytesRead == 0) {
				break;
			}
			
			if(bytesRead == 80 * 4) {
				lock(m_stion){
					for(int i = 0; i < 80; ++i) {
						//Console.Out.Write(BitConverter.ToSingle(readData, i * 4));
						Console.Out.Write("dfdd");
						m_stion[i] = BitConverter.ToSingle(readData, i * 4);
					}
				}
				//Console.Out.Write("\n");
				count = 0;
			}
		}
	}
}